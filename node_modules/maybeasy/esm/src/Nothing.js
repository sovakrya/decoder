import Maybe from './Maybe.js';
export class Nothing extends Maybe {
    getOrElse(fn) {
        return fn();
    }
    getOrElseValue(defaultValue) {
        return defaultValue;
    }
    map(_fn) {
        return new Nothing();
    }
    andThen(_fn) {
        return new Nothing();
    }
    orElse(fn) {
        return fn();
    }
    cata(matcher) {
        return matcher.Nothing();
    }
    assign(_k, _other) {
        return new Nothing();
    }
    do(_fn) {
        return new Nothing();
    }
    elseDo(fn) {
        fn();
        return this;
    }
    isJust() {
        return false;
    }
    isNothing() {
        return true;
    }
}
export const nothing = () => new Nothing();
export default Nothing;
